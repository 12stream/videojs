<template>
<div class="chatInfo">
    <div class="chat-bottom">
        <input type="text" :placeholder="userWordMessage" v-model="chat.MsgTxt" :disabled='chat.chatFlag'>
        <span @click="send">发送</span>
    </div>
    <div class="chat-gift">
        <div class="gift invite" @click="invite"></div>
        <button class="gift praise" @click="praise" :disabled='praiseFlag'>
            <span class="praise-num">{{likeCount}}</span>
        </button>
        <div class="gift box" @click="gift">
            <img src="../images/live_broadcast_ic_gift.png">
        </div>
    </div>
    <!-- 邀请 -->
    <transition name="invite" v-if="inviteFlag">
        <div class="live-invite2">
            <div class="card" @click="$router.push({path:`/invite/${detail.id}`})">
                <img src="../images/card.png">
                <span>邀请卡</span>
            </div>
            <div class="cancel" @click="closeInvite">取消</div>
        </div>
    </transition>
    <div :class="giftFlag ? 'mask-chat fgift' : 'mask-chat'" v-if="inviteFlag || giftFlag" @click="closeInvite"></div>
    <div :class="ctime" id="chat-message">
        <div class="wrapper">
            <!-- <div class="tophidden"></div> -->
            <!-- <div class="fade-wrapper">
                <transition name="fade">
                    <div class="sendgift">
                        <img src="http://192.169.2.63:6012/upload/1/0/0/1/a1925d47-5aa5-43f8-a6a6-20ebb06ae946.png">
                        <div class="audience">
                            <span class="audience-name">名称名称</span>
                            <span class="audience-word">送出棒棒糖</span>
                        </div>
                        <div class="gift-img">
                            <img src="http://192.169.2.63:6012/upload/1/1/0/1/2ea60a05-9bd2-40bf-bbd2-bb8010e597aa.png">
                            <sub>x1</sub>
                        </div>
                    </div>
                </transition>
            </div> -->
            <div class="chat-content">
            <ul class="chat-list-audience">
                <li class="chat-list" v-for="(item,i) in chat.MsgData" :key="i">
                    <img :src="item.imgUrl" v-if="item.imgUrl">
                    <!-- <img src="./../images/toux_s.png" v-if="!item.imgUrl"> -->
                    <img src="https://zzsydatatest.mvaas.cn/hb/default_head_image.png" v-if="!item.imgUrl">
                    <div class="audience">
                        <span class="audience-name">{{item.nickName}}</span>
                        <span class="audience-word" v-if="item.cmd == 1004">{{item.data.msgbody}}</span>
                        <span class="audience-word gift" v-else-if="item.cmd == 1005"><span>送出{{item.data.msgbody}} x1</span> <img :src="item.giftUrl" /></span>
                    </div>
                </li>
            </ul>
            </div>
      </div>
    </div>
     <!-- 礼物 -->
        <transition name="gift" v-if="giftFlag">
            <div class="live-gift">
                <div class="gift">
                    <swiper :options="swiperOption"  ref="mySwiper">  
                        <swiper-slide v-for="(item,i) in carousel" :key="i" class="carousel-gift"> 
                            <div :class="curGiftId == item.id ? 'gift-details cur-gift' : 'gift-details'" @click="sendGift(item)">
                                    <img :src="item.giftImg">
                                    <span class="money" v-if='item.giveCurrencyValue !== 0'>￥{{item.giveCurrencyValue/100}}</span>
                                    <span class="money" v-else-if='item.giveCurrencyValue == 0'>免费</span>
                                    <span class="hand">{{item.giftName}}</span>
                            </div>
                        </swiper-slide>  
                        <!-- 这是轮播的小圆点 -->  
                        <div class="swiper-pagination" slot="pagination"></div>  
                    </swiper>  
                </div>
                <div class="cancel">
                    <div class="payway">支付方式：<span>微信</span></div>
                    <button @click="paySend">赠送</button>
                </div>
            </div>
        </transition>
        <Login v-if="flag" :loginF="loginState"></Login>
        <div class="mask-chat" v-if="flag" @click="close"></div>
</div>
</template>
<script>
import { swiper, swiperSlide } from 'vue-awesome-swiper'
import { videoPlayer } from 'vue-video-player';
import {timestampToTime, getLStorage, getCookie} from '@/api/config'
import {is_weixn, is_QQ} from '@/utils/utils.js'
import Login from '@/components/LoginBox'
import eventVue from '@/components/eventVue.js'
import {tfphoneNumber} from '@/utils/utils'
export default {
    data() {
        return {
            message:'',
            inviteFlag:false,
            giftFlag:false,
            show:false,
            // paySucessFlag:false,
            userWordMessage:'聊天室连接中...',
            swiperOption: {  
                pagination: '.swiper-pagination',  
                // centeredSlides: true,  
                paginationClickable: true,
                onSlideChangeEnd: swiper => {  
                    //这个位置放swiper的回调方法  
                    this.page = swiper.realIndex+1;  
                    this.index = swiper.realIndex;  
                },
                // autoplay: 1000,
                speed:500,
                // loop:true,
                slidesPerView : 4,
                spaceBetween : 10,
            }, 
             chatNum:{
                auditing:0,
                pass:0,
                total:0,
                unpass:0
            },
             chat:{
                 out_room_ServerAddress:'',
                 opts:{},
                 user:[],
                 out_roomID:'',
                 user_id:getLStorage('userid'),
                 isSocket:false,
                 MsgData:[],
                 MsgImgData:[],
                 Msg:'',
                 show_msg:'',
                 MsgTxt: '',
                 MsgGiftata:'',
                 MsgImg:'',
                 portrait: '',
                //  imgUrl: "http://192.169.2.63:6012/upload/1/0/0/1/a1925d47-5aa5-43f8-a6a6-20ebb06ae946.png",
                imgUrl:'',
                views:0,
                chatFlag:true
             },
             form: {
                chatType: true,
                checkedType: false,
                },
                oldForm: {
                chatType: true,
                checkedType: false,
            },
             socket:{},
             bannedList:[],//禁播名单
             likeCount:'',
             sensitiveWord:[],
             curGiftId:'',//当前选中的礼物id
             praiseFlag:false,
             loginState:'loginF',
             flag:false,
             curGiftMoney:0,//所选礼物的价格
             gm:0,//免费礼物
             chooseGiftFlag:false,//是否有选择礼物
             giftPayS:false,
             orderid:''
        }
    },
    props:['detail', 'wxQQ', 'cdtime', 'ctime', 'hf', 'sw'],
    components:{videoPlayer, Login},
    methods:{
        // 点击遮罩层关闭绑定手机号登录框
        close() {
            this.flag = false;
        },
        // 发送聊天信息
        send() {
            if((!getLStorage('mobile') || getLStorage('mobile')  == 'undefined') && !is_weixn()) {
                this.loginState = 'loginF'
                this.flag = true
                // 此为子组件，故弹框登录需要改变父组件中video为img,android端video层级最高
                eventVue.$emit('wL',true)
            }else {
                if(this.chat.MsgTxt.trim() == "") {
                    this.$toast('请先输入聊天内容噢！')
                    this.chat.MsgTxt = this.chat.MsgTxt.trim();
                }
                if(this.socket && this.chat.MsgTxt != "" && !this.chat.MsgTxt.match(/^[ ]+$/)) {
                        const sourceApproch = 1; //消息来源  用户实时操作
                        if (getCookie('wxUserInfo')) {
                            var mes = JSON.parse(getCookie('wxUserInfo'))
                            var name = mes.nickname
                            var headImg = mes.headImg
                        }else if(getLStorage('mobileUserInfo')) {
                            var mobileMes = JSON.parse(getLStorage('mobileUserInfo'))
                            var name = mobileMes.user_title
                            var headImg = mobileMes.user_icon_url
                        }
                        if(getCookie('wxuserid')) {
                            var chatUserid = getCookie('wxuserid')
                        }
                        if(getLStorage('mobile')) {
                            var phoneNumber = getLStorage('mobile').replace(/(\d{3})(\d{4})(\d{4})/, "$1****$3")
                        }
                        this.socket.emit("msg", {
                        imgUrl: headImg ? headImg : this.chat.imgUrl,
                        cmd: 1004,
                        msg: "弹幕",
                        nickName: name ? name : phoneNumber, //nickname,
                        user_id: chatUserid ? chatUserid : this.chat.user_id,
                        barrage: parseInt(0),
                        data: {
                            msgbody: this.chat.MsgTxt
                        }
                        });
                        this.chat.MsgTxt = "";
                        if(this.hf && this.sw) {
                            this.$nextTick(() =>{
                                var chatResult = document.getElementById('chat-message');
                                chatResult.scrollTop = chatResult.scrollHeight;
                            })
                        }
                }
            }
        },
        // 创建直播间
        createLiveRoom() {
             var userId = getLStorage('userid')
            if (this.chat.isSocket) {
                this.chat.MsgData = [];
                this.socket.emit("leave", {
                roomID: 1,
                nickName: "管理员",
                cmd: 1002,
                user_id: userId,
                imgUrl: IMGURL,
                gender: 0
                });
                this.chat.user = {
                    cmd: 1001, //命令号
                    roomID: this.chat.out_roomID,
                    nickName: "管理员", //nickname,
                    user_id: this.chat.user_id, //用户ID    类型：整形
                    imgUrl: this.chat.imgUrl || this.chat.portrait, //用户头像链接 类型：字符串
                    gender: 1 ,//性别
                    device:"portal"
                };
                this.socket.emit("join", this.chat.user);
            } else {
                this.message = this.chat.MsgTxt
                var params = {
                    cmd:'lb',
                    liveID:this.$route.params.liveId,
                    user_id:userId,
                    // tr_type:'wws',
                    video_type:0
                }
                this.$ajax.changeLiveRoom(params).then(res =>{
                    console.log(res)
                    this.chat.coverImg = res.end_show_img || this.detail.live_cover_url;
                    // this.chat.out_room_ServerAddress = res.out_room_ServerAddress;
                    this.chat.out_room_ServerAddress = 'https://zzsytrtest.mvaas.cn/'
                    this.chat.out_roomID = res.out_roomID;
                    this.connectLiveRoom()
                })
                // this.chat.out_room_ServerAddress = 'https://zzsylbtest.mvaas.cn/'
            }
        },

        // 连接直播间
        connectLiveRoom(){
            this.$nextTick(() =>{
                this.chat.opts = {
                    transports:['websocket'],
                    'reconnection delay':1000
                }
                this.socket = io.connect(
                    this.chat.out_room_ServerAddress,
                    this.chat.opts
                )
                // console.log(this.socket)
                // on监听连接事件
                this.socket.on("connect",() =>{
                    this.chat.user = {
                        cmd: 1001, //命令号
                        roomID: this.chat.out_roomID,
                        nickName: "管理员", //nickname,
                        user_id: getLStorage('userid'), //用户ID    类型：整形
                        imgUrl: this.chat.imgUrl, //用户头像链接 类型：字符串
                        gender: 1, //性别
                        device:"portal"
                    };
                    this.socket.emit("join", this.chat.user);
                    // console.log(this.socket)
                    if(this.socket.connected) {
                        this.userWordMessage = '说点什么吧'
                        this.chat.chatFlag = false
                    }
                    // console.log(this.chat)
                })
                this.socket.on("reconnecting", () => {
                    this.chat.user = {
                        cmd: 1001,
                        roomID: this.chat.out_roomID,
                        nickName: "管理员",
                        user_id: getLStorage('userid'),
                        imgUrl: this.chat.imgUrl,
                        gender: 1,
                        device:"portal"
                    };
                    this.socket.emit("join", this.chat.user);
                    // console.log(this.chat)
                });
                this.isSocket = true
                // console.log(this.socket)
                this.socket.on('sys', sysMsg =>{
                    // console.log(sysMsg)
                    this.chat.Msg = sysMsg
                    switch (sysMsg.cmd) {
                    case 1001:
                        // 修改人数
                        if (this.socket) {
                        this.socket.emit("msg", {
                            cmd:6021,
                            msg:'获取聊天数量'
                        });
                        }
                        this.chat.Msg.send_time = timestampToTime(this.chat.Msg.send_time,1);
                        // console.log(this.chat.Msg)
                        if(this.chat.Msg.data.silence_all == 1) {
                            this.userWordMessage = '全员禁言，仅允许管理员发言'
                        }else if(this.chat.Msg.data.silence == 1) {
                            this.userWordMessage = '禁言中'
                        }else if(this.chat.Msg.data.silence == 0 && this.chat.Msg.data.silence_all == 0) {
                            this.userWordMessage = '说点什么吧'
                        }
                        // console.log(this.chat.Msg.data.total_views)
                        eventVue.$emit('views',this.chat.Msg.data.total_views)
                        if(sysMsg.msg=='加入房间'){
                            if(sysMsg.data.silence_all==0){//开启聊天
                                this.oldForm.chatType = true;
                                this.form.chatType = true;
                            }else if(sysMsg.data.silence_all==1){//全员禁言
                                this.oldForm.chatType = false;
                                this.form.chatType = false;
                                this.userWordMessage = "全员禁言，仅允许管理员发言"
                                this.$toast('全员禁言哦~')
                            }
                        }
                        if (this.chat.Msg.data.show_msg !== undefined) {
                            this.chat.show_msg = this.chat.Msg.data.show_msg ? true : false;
                            if (this.chat.Msg.data.show_msg == 0) {
                                this.disabledText = true;
                                this.placeholderTxt = "全体观众已经被禁言";
                            } else {
                                this.disabledText = false;
                                this.placeholderTxt = "我也来说一句...";
                            }   
                        }
                        break;
                    case 1004:
                        // 聊天室通用消息
                        if (this.socket) {
                            this.socket.emit("msg", {
                                cmd:6021,
                                msg:'获取聊天数量'
                            });
                            this.socket.emit("msg", {
                                cmd:6011,
                                msg:'获取房间消息审核状态'
                            });
                        }
                        this.chat.Msg.send_time = timestampToTime(this.chat.Msg.send_time,1);
                        this.chat.MsgData.push(this.chat.Msg);
                        console.log(this.chat.msg)
                        for(let val of this.chat.MsgData) {
                            if(val.nickName) {
                                if(tfphoneNumber(val.nickName)) {
                                  val.nickName =  val.nickName.replace(/(\d{3})(\d{4})(\d{4})/, "$1****$3")
                                }
                            }
                        }
                        if(this.hf && this.sw) {
                            this.$nextTick(() =>{
                                var chatResult = document.getElementById('chat-message');
                                chatResult.scrollTop = chatResult.scrollHeight;
                            })
                        }
                        // console.log(this.chat.MsgData)
                        if(sysMsg.msg == '提示消息' && sysMsg.data.msgbody == "没有更多聊天记录."){//没有更多消息
                            this.chat.MsgData = [];
                        }
                        if (this.chat.Msg.offline == 0) {
                            var color = this.getBarrageColor();
                            //非禁言-弹幕
                            var barrageMsg =
                                "0=-|-=0=-|-=0=-|-=24=-@-=random=-@-=" +
                                color +
                                "=-@-=" +
                                this.chat.Msg.data.msgbody +
                                "=-|-=0";
                            //flash 方法
                            this.getFlash("bacplayer_a1").PushBarrageData(barrageMsg);
                        }
                        break;

                         case 1005:
                            // 礼物
                            this.chat.Msg.send_time = timestampToTime(this.chat.Msg.send_time,1);
                            // this.chat.MsgImgData.push(this.chat.Msg);
                            // 把礼物信息加到聊天信息中去
                            this.chat.MsgData.push(this.chat.Msg);
                             for(let val of this.chat.MsgData) {
                                if(val.nickName) {
                                    if(tfphoneNumber(val.nickName)) {
                                        val.nickName =  val.nickName.replace(/(\d{3})(\d{4})(\d{4})/, "$1****$3")
                                    }
                                }
                            }
                            if(this.hf && this.sw) {
                                this.$nextTick(() =>{
                                    var chatResult = document.getElementById('chat-message');
                                    chatResult.scrollTop = chatResult.scrollHeight;
                                })
                            }
                            // console.log(this.chat.MsgImgData)
                            // console.log(this.chat.MsgData)
                            if(sysMsg.msg == '提示消息' && sysMsg.data.msgbody == "没有更多聊天记录."){//没有更多消息
                                this.chat.MsgImgData = [];
                            }
                        break;
                    case 1055:
                     //聊天送礼物
                        if (this.socket) {
                            this.socket.emit("msg", {
                                cmd:6021,
                                msg:'获取聊天数量'
                            });
                            this.socket.emit("msg", {
                                cmd:6011,
                                msg:'获取房间消息审核状态'
                            });
                        }
                        this.chat.Msg.send_time = timestampToTime(this.chat.Msg.send_time,1);
                        //  this.chat.MsgData.push(this.chat.Msg);
                        if(this.chat.Msg.data.likedNum > 9999) {
                            this.likeCount = (this.chat.Msg.data.likedNum/10000).toFixed(2) + '万'
                        }else {
                            this.likeCount = this.chat.Msg.data.likedNum
                        }
                        //  console.log(this.chat.Msg)
                        break;
                    case 6011:
                        if(sysMsg.data.msg_audit == 1){
                            this.oldForm.checkedType = true;
                            this.form.checkedType = true;
                        }else if(sysMsg.data.msg_audit == 0){
                            this.oldForm.checkedType = false;
                            this.form.checkedType = false;
                        }
                        break;
                    case 2011:
                        // this.chat.Msg.send_time = timestampToTime(this.chat.Msg.send_time,1);
                        console.log(this.chat.Msg)
                        // if(sysMsg.data.silence_all == 0){//正常
                        //     this.oldForm.chatType = true;
                        //     this.form.chatType = true;
                        // }else if (sysMsg.data.silence_all == 1){//开启禁言
                        //     this.oldForm.chatType = false;
                        //     this.form.chatType = false;
                        // }
                        break;
                    case 2024:
                        // this.chat.Msg.send_time = timestampToTime(this.chat.Msg.send_time,1);
                        console.log(this.chat.Msg)
                        if(sysMsg.data.silence_all == 0){//正常
                            this.oldForm.chatType = true;
                            this.form.chatType = true;
                        }else if (sysMsg.data.silence_all == 1){//开启禁言
                            this.oldForm.chatType = false;
                            this.form.chatType = false;
                        }
                        break;
                    case 6010:
                        if(sysMsg.data.msg_audit == 0){//关闭
                            this.oldForm.checkedType = false;
                            this.form.checkedType = false;
                        }else if(sysMsg.data.msg_audit == 1){//开启
                            this.oldForm.checkedType = true;
                            this.form.checkedType = true;
                        }
                        break;
                    case 6020:
                        if(sysMsg.data.allsms){
                            this.chat.MsgData = sysMsg.data.allsms;
                        }else {
                            this.chat.MsgDat = [];
                        }
                        if (this.socket) {
                            this.socket.emit("msg", {
                                cmd:6021,
                                msg:'获取聊天数量'
                            });
                        }
                        break;
                    case 6021:
                        // 获取消息数量
                        this.chatNum = sysMsg.data;
                        break;
                    case 2020:
                        // 历史聊天记录
                        this.chat.Msg.data.allsms = this.chat.Msg.data.allsms.reverse();
                        for (var i = 0; i < this.chat.Msg.data.allsms.length; i++) {
                            this.chat.MsgData.unshift(this.chat.Msg.data.allsms[i]);
                        }
                        break;
                    case 2010:
                        // 禁言列表
                        this.bannedList = [];
                        if (this.chat.Msg.data[0]) {
                            this.bannedList = this.chat.Msg.data;
                            this.isBannedData = true;
                        } else {
                            this.isBannedData = false;
                        }
                        break;
                    }
                })
            })
        },
        // 聊天室送礼物
        sendGift(gid) {
            console.log(gid)
            this.chooseGiftFlag = true
            this.show = true;
            setTimeout(() => {
                this.show = false
            }, 1000);
            this.curGiftId = gid.id;
            this.chat.MsgGiftata = gid.giftName;
            this.chat.MsgImg = gid.giftImg;
            this.curGiftMoney = (gid.giveCurrencyValue/100).toFixed(2)
            this.gm = gid.giveCurrencyValue
        },
        // 自定义聊天室送礼
        selfSendGift() {
            if(this.socket) {
                // var body =this.chat.MsgGiftata
                var jsontostring = this.chat.MsgGiftata;
                if(getCookie('wxUserInfo')) {
                    var mes = getCookie('wxUserInfo')
                    var chatImg = mes.headImg;
                    var chatUserId = mes.unionid
                    var nickName = mes.nickname
                }
                this.socket.emit("msg", {
                    imgUrl: chatImg ? chatImg : this.chat.imgUrl,
                    // imgUrl:'https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKwjKBq5JharJZwng6DpF2QYhRwMH3qibeEInoqYOnTAkMTykY1DA7U7SOMhsTJWcfCRFK7HkgnUSg/132',
                    cmd: 1005,
                    msg: "自定义礼物消息",
                    nickName: nickName ? nickName : getLStorage('mobile').replace(/(\d{3})(\d{4})(\d{4})/, "$1****$3"), //nickname,
                    user_id: chatUserId ? chatUserId  : this.chat.user_id,
                    giftUrl:this.chat.MsgImg,
                    barrage: parseInt(0),
                    data: {
                        msgbody: jsontostring
                    }
                    });
                    if(this.hf && this.sw){
                        this.$nextTick(() =>{
                            var chatResult = document.getElementById('chat-message');
                            chatResult.scrollTop = chatResult.scrollHeight;
                        })
                    }
                    this.giftFlag = false
                }
        },
        // 赠送支付
        paySend() {
            if(this.chooseGiftFlag) {
                if((!getLStorage('mobile') && getLStorage('mobile')  !== 'undefined')) {
                    this.loginState = 'loginF'
                    this.flag = true
                    this.giftFlag = false
                    eventVue.$emit('wL',true)
                }else{
                    if(this.gm !== 0) {
                        if(is_weixn()) {
                            this.weixinPay()
                            // this.selfSendGift()
                            this.giftFlag = false
                        }else if(!is_weixn()){
                            this.hfivePay()
                            // this.selfSendGift()
                        }
                    }else {
                        this.selfSendGift()
                    }
                }
            }else {
                this.$toast('请选择礼物哦！')
            }
        },
        giftPayF(orderid) {
            this.$ajax({orderNum:orderid}).then(res =>{
                console.log(res)
                if(res.data == '1') {
                    this.giftPayS = true
                }
            })
        },
        // 微信支付
        weixinPay() {
            var mes = JSON.parse(getCookie('wxUserInfo'))
            var params = {
                userId:getLStorage('userid'),
                userName:mes.nickname,
                open_id:getCookie('wxUserOpenid'),
                gender:mes.sex,
                address:'',
                phoneNumber:getLStorage('mobile'),
                imgUrl:mes.headImg,
                receiveUserID:1,
                receiveLiveID:this.$route.params.liveId,
                receiveVideoID:this.detail.id,
                giftID:this.curGiftId,
                giftCount:1,
                type:1,
                money:this.curGiftMoney,
                source:2
            }
            this.$ajax.giftPayStart(params).then(res =>{
                console.log('payweixingift:'+JSON.stringify(res))
                console.log('paygift:'+JSON.stringify(res.data))
                wx.config({
                    debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
                    appId: res.data.appId, // 必填，公众号的唯一标识
                    timestamp: res.data.timeStamp, // 必填，生成签名的时间戳
                    nonceStr: res.data.nonceStr, // 必填，生成签名的随机串
                    signature: res.data.paySign,// 必填，签名，见附录1
                    jsApiList: [
                        'chooseWXPay',
                    ] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2
                });
                    wx.chooseWXPay({
                    timestamp: res.data.timeStamp, // 支付签名时间戳，注意微信jssdk中的所有使用timestamp字段均为小写。但最新版的支付后台生成签名使用的timeStamp字段名需大写其中的S字符
                    nonceStr: res.data.nonceStr, // 支付签名随机串，不长于 32 位
                    package: res.data.packageStr, // 统一支付接口返回的prepay_id参数值，提交格式如：prepay_id=\*\*\*）
                    signType: res.data.signType, // 签名方式，默认为'SHA1'，使用新版支付需传入'MD5'
                    paySign: res.data.paySign, // 支付签名
                    success: function (res) {
                    // 支付成功后的回调函数
                    // console.log('支付成功：-----' + res)
                        if(res) {
                            // this.paySucessFlag = true
                            this.$ajax({orderNum:this.orderid}).then(res =>{
                                console.log(res)
                                if(res.data == '1') {
                                    this.selfSendGift()
                                }
                            })
                        }
                    }
                });
            })
        },
        hfivePay() {
            var wxMessage = getCookie('wxUserInfo')
            // var newP = window.open('about:blank')
             var params = {
                userId:getLStorage('userid'),
                userName:getLStorage('mobile'),
                gender:'',
                address:'',
                phoneNumber:getLStorage('mobile'),
                imgUrl:'',
                receiveUserID:1,
                receiveLiveID:this.$route.params.liveId,
                receiveVideoID:this.detail.id,
                giftID:this.curGiftId,
                giftCount:1,
                type:2,
                money:this.curGiftMoney,
                open_id:'',
                source:2
            }
            console.log(params)
            this.$ajax.giftPayStart(params).then(res =>{
                console.log(res)
                this.orderid = res.data.orderNo
                console.log(res.data.codeUrl)
                var curPUrl = window.location.href + '?payG=2'
                // newP.location.href = `${res.data.mweb_url}&redirect_url=${curPUrl}?payG=2`
                window.location.href = `${res.data.mweb_url}&redirect_url=${encodeURIComponent(curPUrl)}`
                // newP.location.href = 'http://www.baidu.com'
                // if(res.code == 200) {
                //     this.paySucessFlag = true
                // }
                //  this.$msgbox({
                //     title:'温馨提示',
                //     cancel:'取消',
                //     content:'支付已成功！',
                //     confirm:'确定已支付',
                //     className:'pop-custom'
                // }).then((o)=>{
                //      this.$ajax.giftPayState({orderNum:this.orderid}).then(res =>{
                //         console.log(res)
                //         if(res.data == '1') {
                //             this.selfSendGift()
                //         }
                //     })
                //     // console.log(o)
                //     // this.selfSendGift()
                // }).catch((err)=>{
                //     // console.log("error");
                //     this.$ajax.giftPayState({orderNum:this.orderid}).then(res =>{
                //         console.log(res)
                //         if(res.data == '1') {
                //             this.selfSendGift()
                //         }
                //     })
                // })
            })
        },
        // 邀请
        invite() {
            this.inviteFlag = true;
            // if(is_weixn()) {
            //     this.loginState = 'changF'
            // }else {
            //     this.loginState = 'loginF'
            // }
        },
        // 点赞
        praise() {
            if(is_weixn()) {
                this.loginState = 'changF'
            }else {
                this.loginState = 'loginF'
            }
            if(!getLStorage('mobile') && getLStorage('mobile')  !== 'undefined' && !is_weixn()) {
                this.loginState = 'loginF'
                this.flag = true
                eventVue.$emit('wL',true)
            }else {
                var params = {
                    masterID:this.detail.user_id,
                    likeID:getLStorage('userid'),
                    liveID:this.$route.params.liveId
                }
                this.$ajax.praise(params).then(res =>{
                    if(res.resultCode == '01') {
                        console.log('test')
                        this.praiseFlag = true
                        this.getPraise()
                    }
                })
                // if(getCookie('wxUserInfo') || getCookie('wxUserInfo') !== 'undefined') {
                //     var mes = JSON.parse(getCookie('wxUserInfo'))
                // }
                // var userName = getLStorage('mobile').replace(/(\d{3})(\d{4})(\d{4})/, "$1****$3")
                // var body = {
                //         likeTheLive:1,
                //         likedNum:this.likeCount
                //     }
                // var sysMsg = {
                //     cmd:1055,
                //     msg:'自定义点赞消息',
                //     nickName:mes ? mes.nickname : userName,
                //     user_id:mes ? mes.unionid : getLStorage('userid'),
                //     data:{
                //         msgbody:body
                //     }    
                // };
                //     ws.emit('msg',sysMsg);
            }
        },
        // 获取点赞的次数
        getPraise() {
            // if(this.wxQQ) {
            //     this.topdisance = 'wxqq chat'
            // }else if(this.cdtime) {
            //     this.topdisance = 'topdis chat'
            // }else if(this.wxQQ && this.cdtime) {
            //     this.topdisance = 'wxqq topdis chat'
            // }
            // if(this.cdtime) {
            //     this.topdisance = 'topdis chat'
            // }
            this.$ajax.praiseNumber({liveID:this.$route.params.liveId}).then(res =>{
                if(res.params.likeCount > 9999) {
                    this.likeCount = (res.params.likeCount/10000).toFixed(2) + '万'
                }else {
                    this.likeCount = res.params.likeCount
                }
            })
        },
        // 查询礼物
        checkAllGift() {
            var params = {
                userID:1,
                pageNo:1,
                pageSize:10
            }
            this.$ajax.getGift(params).then(res => {
                // console.log(res)
                this.carousel = res.params.list
                if(res.params.page.total !== 0) {
                     this.giftFlag = true;
                }else {
                    this.$toast('你还没有可选的礼物哟！')
                }
            })
        },
        // 送礼
        gift() {
            if(is_weixn()) {
                this.loginState = 'changF'
            }else {
                this.loginState = 'loginF'
            }
            this.checkAllGift();
        },
        // 关闭邀请、送礼
        closeInvite() {
            this.inviteFlag = false;
            this.giftFlag = false;
        },
        // 获取敏感词
        // getSensitiveWord() {
        //     this.$ajax.SensitiveWord({
        //         cmd:'get',
        //         userid:getLStorage('userid')
        //     }).then(res =>{
        //         if(res.out_words !== '') {
        //             consoole.log(333)
        //             this.sensitiveWord = res.out_words.split('*').slice(1);
        //         }else {
        //             this.sensitiveWord = []
        //         }
        //     })
        // },
        payGS() {
            var curGUrl = window.location.href;
            // 判断是否是礼物支付返回的链接地址
            if(curGUrl.indexOf('payG') > -1) {
                this.$msgbox({
                    title:'温馨提示',
                    cancel:'取消',
                    content:'支付已成功！',
                    confirm:'确定已支付',
                    className:'pop-custom'
                }).then((o)=>{
                     this.$ajax.giftPayState({orderNum:this.orderid}).then(res =>{
                        console.log(res)
                        if(res.data == '1') {
                            this.selfSendGift()
                        }
                    })
                    // console.log(o)
                    // this.selfSendGift()
                }).catch((err)=>{
                    // console.log("error");
                    this.$ajax.giftPayState({orderNum:this.orderid}).then(res =>{
                        console.log(res)
                        if(res.data == '1') {
                            this.selfSendGift()
                        }
                    })
                })
            }
        }
    },
    mounted() {
        // console.log(document.getElementById('chat-message'))
        // var cNode = document.getElementById('chat-message')
        // var vh = window.screen.height*0.56;
        // cNode.style.top = vh + 'px';
        // alert(window.screen.height)
        // alert(window.screen.width)
        this.userWordMessage = '聊天室连接中...'
        this.createLiveRoom();
        this.getPraise();
        this.payGS()
        // this.getSensitiveWord()
        eventVue.$on('cancel', val => {
            // 点击遮罩层时的处理
            this.flag = val
            console.log(767)
        })
    }
}
</script>
<style lang="scss" scoped>
// 邀请
.fade-enter-active{
	/*从左到右*/
	animation:slideLeft 1s;
    
}


.fade-leave-active{

	/*从右到左*/
	animation:slideRight 1s;
}

@keyframes slideLeft{

	0%{
		transform: translate(-100%,0);
        opacity:0
	}

	100%{
		transform: translate(0,0);
        opacity:1
	}
}

@keyframes slideRight{

	0%{
		transform: translate(0,0);
        opacity:1
	}

	100%{
		transform: translate(-100%,0);
        opacity:0
	}
}
.chat {
    position: absolute;
    bottom:0rem;
    width: 100%;
    // height: 100%;
    background: #F6F6F6;
    // overflow: auto;
    overflow-y: scroll;
    -webkit-overflow-scrolling: touch;
    padding-bottom: 6rem;
    // overflow-scrolling:touch;
    overflow-x: hidden;
    @media only screen and (min-width: 320px) {
        top: 29.8rem;
        //  &.ctime {
        //     top: 29.8rem;
        // }
    }
    //  @media only screen and (min-width: 360px) {
    //     top: 33.5rem;
    //      &.ctime {
    //         top: 28.7rem;
    //     }
    // }
    @media only screen and (min-width: 360px) {
        top: 29.9rem;
         &.ctime {
            top: 34.9rem;
        }
    }
    //  @media only screen and (min-width: 600px) {
    //     top: 49.85rem;
    //      &.ctime {
    //         top: 41.8rem;
    //     }
    // }
    // &.wxqq {
    //     top:299px;
    // }
    // &.topdis {
    //     top: 39.3rem;
    // }
    // &.wxqq.topdis {
    //     top: 349px;
    // }
    .wrapper {
        position: relative;
        .tophidden {
            position: fixed;
            width: 100%;
            height: 3rem;
            width:750px;
            z-index: 1;
            background:linear-gradient(180deg,rgba(246,246,246,1) 0%,rgba(244,244,244,0.87) 48%,rgba(246,246,246,0) 100%);
        }
        .fade-wrapper {
            position: absolute;
            top: 1.15rem;
            z-index: 0;
            .sendgift {
                width: 16.6rem;
                height: 4.1rem;
                border-radius: 2.1rem;
                background:linear-gradient(180deg,rgba(255,168,114,1) 0%,rgba(255,117,71,1) 100%);
                display: flex;
                align-items: center;
                margin-left: 1.6rem;
                margin-top: 1.15rem;
                position: relative;
                >img {
                    width: 3.15rem;
                    height: 3.15rem;
                    border-radius: 50%;
                    margin-left: 0.5rem;
                }
                .audience {
                    display: flex;
                    flex-direction: column;
                    margin-left: 0.6rem;
                    font-size: 1.2rem;
                    word-break: break-all;
                    .audience-name {
                        color: #fff;
                        line-height: 1.65rem;
                    }
                    .audience-word {
                        color: #F8E71C;
                        line-height: 1.65rem;
                    }
                }
                .gift-img {
                    position: absolute;
                    right: -3.8rem;
                    img {
                        width: 5rem;
                        height: 4.9rem;
                    }
                    sub {
                        font-size: 2.8rem;
                        position: relative;
                        top: 1.5rem;
                        left: -0.5rem;
                        color: #ffb725;
                    }
                }
            }
        }
        ul {
            // overflow-x: hidden;
            //  -webkit-overflow-scrolling: touch;
            li {
                display: flex;
                padding-left: 1.5rem;
                padding-top: 1rem;
                img {
                    width: 3rem;
                    height: 3rem;
                    border-radius: 50%;
                }
                .audience {
                    display: flex;
                    flex-direction:column;
                    padding-left: 0.9rem;
                    width: 25rem;
                    font-size: 1.4rem;
                    .audience-name {
                        color: #666;
                        line-height: 2rem;
                    }
                    .audience-word {
                        color: #333;
                        line-height: 2rem;
                        word-break: break-all;
                        &.gift {
                            display: flex;
                            justify-content: space-between;
                            align-items: center;
                            width: 148px;
                            min-height: 25px;
                            line-height: 25px;
                            background: #fff;
                            color: #FF6633;
                            font-size: 14px;
                            padding:0 0.6rem;
                            border-radius: 1.2rem;
                            img {
                                width: 2.5rem;
                                height: 2.5rem;
                            }
                        }
                    }
                }
            }
        }
        // .chat-bottom {
        //     position: fixed;
        //     bottom: 0;
        //     left: 0;
        //     height: 6rem;
        //     width: 100%;
        //     background: #F6F6F6;
        //     display: flex;
        //     align-items: center;
        //     input {
        //         margin-left: 1rem;
        //         display: block;
        //         height: 3.4rem;
        //         background:url('../images/chatroom_ic_pen.png') no-repeat #fff 0.5rem;
        //         border-radius: 1.7rem 0 0 1.7rem;
        //         padding-left: 2.7rem;
        //         flex: 8;
        //     }
        //     span {
        //         flex: 2;
        //         height: 3.4rem;
        //         background: #fff;
        //         margin-right: 1rem;
        //         text-align: center;
        //         line-height: 3.4rem;
        //         font-size: 1.4rem;
        //         font-weight:100;
        //         border-radius: 0 1.7rem  1.7rem  0;
        //         color: #4285F4;
        //         position: relative;
        //     }
        //     span:before {
        //         content: "";
        //         width: 1px;
        //         height: 2rem;
        //         background: #CCCCCC;
        //         position: absolute;
        //         left: 0;
        //         top: 0.7rem;
        //     }
        //     img {
        //         position: absolute;
        //     }
        //     input::-webkit-input-placeholder{
        //         color:#999999;
        //     }
        //     input::-moz-placeholder{   /* Mozilla Firefox 19+ */
        //         color:#999999;
        //     }
        //     input:-moz-placeholder{    /* Mozilla Firefox 4 to 18 */
        //         color:#999999;
        //     }
        //     input:-ms-input-placeholder{  /* Internet Explorer 10-11 */ 
        //         color:#999999;
        //     }
        // }
    }
}
.chat::-webkit-scrollbar{
    display: none;
}

// 邀请
.invite-enter-active,.gift-enter-active{
	/*从下到上*/
	animation:slideTop .4s;
}


.invite-leave-active,.gift-leave-active{

	/*从上到下*/
	animation:slideBottom .4s;
}


@keyframes slideTop{

	0%{
		transform: translate(0,100%);
	}

	100%{
		transform: translate(0,0);
	}
}

@keyframes slideBottom{

	0%{
		transform: translate(0,0);
	}

	100%{
		transform: translate(0,100%);
	}
}
.live-invite2 {
    height: 14.8rem;
    width: 100%;
    background: #fff;
    position: fixed;
    bottom: 0;
    left: 0;
    z-index: 15;
    .card {
        width: 100%;
        height: 10.5rem;
        border-bottom: 1px solid #E3E3E7;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        span {
            color: #909090;
            margin-top: 0.3rem;
        }
        img {
            width: 4.8rem;
            height: 4.8rem;
        }
    }
    .cancel {
        width: 100%;
        height: 4.1rem;
        line-height: 4.1rem;
        text-align: center;
        color: #9B9B9B;
        font-size: 1.5rem;
    }
}
.live-gift {
    width: 100%;
    height: 19rem;
    // background: url('../images/Rectangle.png') no-repeat;
    // background-size: cover;
    background: rgba(0,0,0,0.7);
    position: fixed;
    bottom: 0;
    left: 0;
    z-index: 15;
    .gift {
        height: 14.1rem;
        .swiper-wrapper {
            >div {
                margin: 0 !important;
                width: 25% !important;
            }
        }
        .swiper-slide {
            height: 14.1rem;
            display: flex;
            justify-content: center;
            .gift-details {
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
                border-right: 1px solid #666;
                border-bottom: 1px solid #666;
                padding:0 10px;
                font-size: 1.2rem;
                height: 12.2rem;
                &.cur-gift {
                    // background: #000;
                    // opacity: 0.8;
                    border: 1px solid #FF6633;
                }
                img {
                    width: 100%;
                    height: 8.4rem;
                }
                .money {
                    color: #FF6633;
                }
                .hand {
                    color: #CCCCCC;
                }
            }
        }
        .swiper-pagination {
            bottom: 0rem;
        }
    }
    .cancel {
        height: 4.9rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        background:rgba(0,0,0,0.5);
        .payway {
            padding-left: 1rem;
            color: #fff;
            span {
                color: #FF6633;
            }
        }
        button {
            width: 7.5rem;
            height: 3rem;
            background: #FF6633;
            border-radius: 1.5rem;
            color: #fff;
            margin-right: 1.5rem;
            border: none;
        }
    }
}
.mask-chat {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0, .5);
    z-index: 1;
    &.fgift {
        background-color: rgba(0,0,0, 0.4);
    }
}
.chat-bottom {
    position: fixed;
    bottom: 0;
    left: 0;
    height: 5rem;
    width: 100%;
    background: #F6F6F6;
    display: flex;
    align-items: center;
    z-index:10;
    input {
        margin-left: 1rem;
        display: block;
        height: 3.4rem;
        background:url('../images/chatroom_ic_pen.png') no-repeat #fff 0.5rem;
        border-radius: 1.7rem 0 0 1.7rem;
        padding-left: 2.7rem;
        flex: 8;
    }
    span {
        flex: 2;
        height: 3.4rem;
        background: #fff;
        margin-right: 1rem;
        text-align: center;
        line-height: 3.4rem;
        font-size: 1.4rem;
        font-weight:100;
        border-radius: 0 1.7rem  1.7rem  0;
        color: #4285F4;
        position: relative;
    }
    span:before {
        content: "";
        width: 1px;
        height: 2rem;
        background: #CCCCCC;
        position: absolute;
        left: 0;
        top: 0.7rem;
    }
    img {
        position: absolute;
    }
    input::-webkit-input-placeholder{
        color:#999999;
    }
    input::-moz-placeholder{   /* Mozilla Firefox 19+ */
        color:#999999;
    }
    input:-moz-placeholder{    /* Mozilla Firefox 4 to 18 */
        color:#999999;
    }
    input:-ms-input-placeholder{  /* Internet Explorer 10-11 */ 
        color:#999999;
    }
}
.chat-gift {
    position: fixed;
    right: 1rem;
    bottom: 5.5rem;
    display: flex;
    justify-content: center;
    flex-direction: column;
    align-items: center;
    z-index: 1;
    .gift {
        width: 4.8rem;
        height: 4.8rem;
        &.invite {
            background: url('../images/icon_Invitation.png') no-repeat;
            background-size: 4.8rem 4.8rem;
        }
        &.praise {
            background: url('../images/icon_zan_1.png') no-repeat;
            background-size: 4.8rem 4.8rem;
            position: relative;
            display: flex;
            justify-content: center;
            align-items: center;
            span {
                color: #fff;
                font-size: 10px;
                position: absolute;
                bottom: 0.5rem;
                // width: 2.7rem;
                height: 1.5rem;
                text-align: center;
                transform: scale(0.8)
            }
        }
        &.box {
            width: 4rem;
            height: 4rem;
            border-radius: 50%;
            background: #FF467F;
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 0.55rem;
            img {
                width: 2rem;
                height: 2rem;
            }
        }
    }
}
</style>

