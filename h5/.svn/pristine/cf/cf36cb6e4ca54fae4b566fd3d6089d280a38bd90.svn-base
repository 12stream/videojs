<template>
    <div class="autor">
        <div class="title">你还未授权，请先授权！</div>
        <div>
            <button @click="startAutor">授权</button>
        </div>
    </div>
</template>
<script>
import { getQueryString, getLStorage, setCookie, getCookie, removeCookie } from '@/api/config'
export default {
    data() {
        return {

        }
    },
    methods:{
        startAutor() {
            var url = window.location.href;
            if(!getCookie('wxUserOpenid') && getCookie('wxUserOpenid') !== 'undefined') {
                removeCookie('oneCode')
            }
            console.log(url.indexOf('code') < 0,(getCookie('oneCode') !== 'one'),!getCookie('wxUserOpenid'),(getCookie('wxUserOpenid') == 'undefined'))
            // 先判断是否从微信进入，后判断未拿到code值时调用
            if (is_weixn()) {
                if ((url.indexOf('code') < 0 && getCookie('oneCode') !== 'one') && (!getCookie('wxUserOpenid') && getCookie('wxUserOpenid') !== 'undefined')) {
                    console.log(2)
                    fetch.wxStart({
                        redirect_uri: url.split('autor')[0]
                    }).then(res => {
                        setCookie('oneCode','one',10)
                        // 用户未同意授权时，此时code值为空，若在此条件下会导致无限死循环
                        if(res.data.indexOf('code') > -1) {
                            window.location.href = res.data;
                        }
                    })
                } else {
                    //获取用户信息
                    if(url.indexOf('code') < 0) {
                        router.push({ path: '/router' })
                    }else {
                        if (!getCookie('wxUserOpenid') && getCookie('wxUserOpenid') !== 'undefined') {
                            fetch.getUerInfo({
                                code: getQueryString('code')
                            }).then(res => {
                                setCookie('code', getQueryString('code'), 10)
                                setCookie('wxUserInfo', JSON.stringify(res.data), 10)
                                setCookie('wxUserOpenid', res.data.openid, 10)
                                if(res.code == 200) {
                                    var paramsTir = {
                                        user_title:res.data.nickname,
                                        third_icon:res.data.headImg,
                                        reg_type:4,
                                        third_id:res.data.unionid,
                                        login_type:0,
                                        login_platform:2
                                    }
                                    fetch.thirdLogin(paramsTir).then(res =>{
                                        console.log("第三方登陆返回信息：" +JSON.stringify(res))
                                        if(res.code == 200) {
                                            // setLStorage('wxuserid', res.data.id);
                                            setCookie('wxuserid', res.data.id, 10)
                                        }
                                    })
                                }
                            })
                        }
                    }
                }
            }
        }
    }

}
</script>
<style lang="scss" scoped>
.autor {
    display: flex;
    justify-content: center;
    flex-direction: column;
    align-items: center;
    margin: 20px;
}
button {
    width: 80px;
    height: 44px;
    background: #44B549;
    color: #fff;
    margin-top: 20px;
}
</style>
