<template>
    <div class="chat">
        <div class="chat-content">
           <ul class="chat-list-audience">
               <li class="chat-list" v-for="(item,i) in chat.MsgData" :key="i">
                   <img :src="item.imgUrl">
                   <div class="audience">
                       <span class="audience-name">{{item.nickName}}</span>
                       <span class="audience-word">{{item.data.msgbody}}</span>
                   </div>
               </li>
           </ul>
        </div>
        <div class="chat-bottom">
            <input type="text" :placeholder="userWordMessage" v-model="chat.MsgTxt">
            <span @click="send">发送</span>
        </div>
        <div class="chat-gift">
            <div class="gift invite" @click="invite"></div>
            <div class="gift praise" @click="praise">
                <span>{{likeCount}}</span>
            </div>
            <div class="gift box" @click="gift">
                <img src="../images/live_broadcast_ic_gift.png">
            </div>
        </div>
        <div :class="giftFlag ? 'mask fgift' : 'mask'" v-if="inviteFlag || giftFlag" @click="closeInvite"></div>
        <!-- 邀请 -->
       <transition name="invite" v-if="inviteFlag">
            <div class="live-invite">
                <div class="card" @click="$router.push({path:'/invite'})">
                    <img src="../images/card.png">
                    <span>邀请卡</span>
                </div>
                <div class="cancel">取消</div>
            </div>
      </transition>
      <!-- 礼物 -->
       <transition name="gift" v-if="giftFlag">
            <div class="live-gift">
                <div class="gift">
                    <swiper :options="swiperOption"  ref="mySwiper">  
                        <swiper-slide v-for="(item,i) in carousel" :key="i" class="carousel-gift"> 
                            <div class="gift-details">
                                    <img :src="item.giftImg">
                                    <span class="money">{{item.giveCurrencyValue}}</span>
                                    <span class="hand">{{item.giftName}}</span>
                            </div>
                        </swiper-slide>  
                        <!-- 这是轮播的小圆点 -->  
                        <div class="swiper-pagination" slot="pagination"></div>  
                    </swiper>  
                </div>
                <div class="cancel">
                    <div class="payway">支付方式：<span>微信</span></div>
                    <button>赠送</button>
                </div>
            </div>
      </transition>
    </div>
</template>
<script>
import { swiper, swiperSlide } from 'vue-awesome-swiper'
import { videoPlayer } from 'vue-video-player';
import {timestampToTime, getLStorage} from '@/api/config'
export default {
    data() {
        return {
            message:'',
            inviteFlag:false,
            giftFlag:false,
            userWordMessage:'说点什么吧',
            swiperOption: {  
                pagination: '.swiper-pagination',  
                // centeredSlides: true,  
                paginationClickable: true,
                onSlideChangeEnd: swiper => {  
                    //这个位置放swiper的回调方法  
                    this.page = swiper.realIndex+1;  
                    this.index = swiper.realIndex;  
                },
                // autoplay: 1000,
                speed:500,
                loop:true,
                slidesPerView : 4,
                spaceBetween : 10,
            }, 
             chatNum:{
                auditing:0,
                pass:0,
                total:0,
                unpass:0
            },
             chat:{
                 out_room_ServerAddress:'',
                 opts:{},
                 user:[],
                 out_roomID:'',
                 user_id:getLStorage('userid'),
                 isSocket:false,
                 MsgData:[],
                 Msg:'',
                 show_msg:'',
                 MsgTxt: "",
                 portrait: "",
                 imgUrl: "http://192.169.2.63:6012/upload/1/0/0/1/a1925d47-5aa5-43f8-a6a6-20ebb06ae946.png",
             },
             form: {
                chatType: true,
                checkedType: false,
                },
                oldForm: {
                chatType: true,
                checkedType: false,
            },
             socket:{},
             bannedList:[],//禁播名单
             likeCount:'',
             sensitiveWord:[]
        }
    },
    props:['detail'],
    components:{videoPlayer},
    methods:{
        // 发送聊天信息
        send() {
           if(this.chat.MsgTxt.trim() == "") {
               this.$toast('请先输入聊天内容噢！')
                this.chat.MsgTxt = this.chat.MsgTxt.trim();
           }
           if(this.socket && this.chat.MsgTxt != "" && !this.chat.MsgTxt.match(/^[ ]+$/)) {
                const sourceApproch = 1; //消息来源  用户实时操作
                this.socket.emit("msg", {
                imgUrl: this.chat.imgUrl || this.chat.portrait,
                cmd: 1004,
                msg: "弹幕",
                nickName: "管理员", //nickname,
                user_id: this.chat.user_id,
                barrage: parseInt(0),
                data: {
                    msgbody: this.chat.MsgTxt
                }
                });
                this.chat.MsgTxt = "";
           }
        },
        // 创建直播间
        createLiveRoom() {
             var userId = getLStorage('userid')
            if (this.chat.isSocket) {
                this.chat.MsgData = [];
                this.socket.emit("leave", {
                roomID: 1,
                nickName: "管理员",
                cmd: 1002,
                user_id: userId,
                imgUrl: IMGURL,
                gender: 0
                });
                this.chat.user = {
                cmd: 1001, //命令号
                roomID: this.chat.out_roomID,
                nickName: "管理员", //nickname,
                user_id: this.chat.user_id, //用户ID    类型：整形
                imgUrl: this.chat.imgUrl || this.chat.portrait, //用户头像链接 类型：字符串
                gender: 1 ,//性别
                device:"portal"
                };
                this.socket.emit("join", this.chat.user);
            } else {
                this.message = this.chat.MsgTxt
                var params = {
                    cmd:'lb',
                    liveID:this.$route.params.liveId,
                    user_id:userId,
                    // tr_type:'wws',
                    video_type:0

                }
                this.$ajax.changeLiveRoom(params).then(res =>{
                    console.log(res)
                    this.chat.coverImg = res.end_show_img || this.detail.live_cover_url;
                    // this.chat.out_room_ServerAddress = res.out_room_ServerAddress;
                    this.chat.out_room_ServerAddress = 'https://zzsytrtest.mvaas.cn/'
                    this.chat.out_roomID = res.out_roomID;
                    this.connectLiveRoom()
                })
                // this.chat.out_room_ServerAddress = 'https://zzsylbtest.mvaas.cn/'
            }
        },

        // 连接直播间
        connectLiveRoom(){
            this.$nextTick(() =>{
                this.chat.opts = {
                    transports:['websocket'],
                    'reconnection delay':1000
                }
                this.socket = io.connect(
                    this.chat.out_room_ServerAddress,
                    this.chat.opts
                )
                console.log(this.socket)
                // on监听连接事件
                this.socket.on("connect",() =>{
                    this.chat.user = {
                        cmd: 1001, //命令号
                        roomID: this.chat.out_roomID,
                        nickName: "管理员", //nickname,
                        user_id: getLStorage('userid'), //用户ID    类型：整形
                        imgUrl: this.chat.imgUrl, //用户头像链接 类型：字符串
                        gender: 1, //性别
                        device:"portal"
                    };
                    this.socket.emit("join", this.chat.user);
                    // console.log(this.socket)
                    // console.log(this.chat)
                })
                this.socket.on("reconnecting", () => {
                    this.chat.user = {
                    cmd: 1001,
                    roomID: this.chat.out_roomID,
                    nickName: "管理员",
                    user_id: getLStorage('userid'),
                    imgUrl: this.chat.imgUrl,
                    gender: 1,
                    device:"portal"
                    };
                    this.socket.emit("join", this.chat.user);
                    // console.log(this.chat)
                });
                this.isSocket = true
                // console.log(this.socket)
                this.socket.on('sys', sysMsg =>{
                    // console.log(sysMsg)
                    this.chat.Msg = sysMsg
                    switch (sysMsg.cmd) {
                    case 1001:
                        // 修改人数
                        if (this.socket) {
                        this.socket.emit("msg", {
                            cmd:6021,
                            msg:'获取聊天数量'
                        });
                        }
                        if(sysMsg.msg=='加入房间'){
                            if(sysMsg.data.silence_all==0){//开启聊天
                                this.oldForm.chatType = true;
                                this.form.chatType = true;
                            }else if(sysMsg.data.silence_all==1){//全员禁言
                                this.oldForm.chatType = false;
                                this.form.chatType = false;
                                this.userWordMessage = "全员禁言，仅允许管理员发言"
                                this.$toast('全员禁言哦~')
                            }
                        }
                        if (this.chat.Msg.data.show_msg !== undefined) {
                            this.chat.show_msg = this.chat.Msg.data.show_msg ? true : false;
                            if (this.chat.Msg.data.show_msg == 0) {
                                this.disabledText = true;
                                this.placeholderTxt = "全体观众已经被禁言";
                            } else {
                                this.disabledText = false;
                                this.placeholderTxt = "我也来说一句...";
                            }
                        }
                        break;
                    case 1004:
                        // 聊天室通用消息
                        if (this.socket) {
                            this.socket.emit("msg", {
                                cmd:6021,
                                msg:'获取聊天数量'
                            });
                            this.socket.emit("msg", {
                                cmd:6011,
                                msg:'获取房间消息审核状态'
                            });
                        }
                        this.chat.Msg.send_time = timestampToTime(this.chat.Msg.send_time,1);
                        this.chat.MsgData.push(this.chat.Msg);
                        // console.log(this.chat.MsgData)
                        if(sysMsg.msg == '提示消息' && sysMsg.data.msgbody == "没有更多聊天记录."){//没有更多消息
                            this.chat.MsgData = [];
                        }
                        if (this.chat.Msg.offline == 0) {
                            var color = this.getBarrageColor();
                            //非禁言-弹幕
                            var barrageMsg =
                                "0=-|-=0=-|-=0=-|-=24=-@-=random=-@-=" +
                                color +
                                "=-@-=" +
                                this.chat.Msg.data.msgbody +
                                "=-|-=0";
                            //flash 方法
                            this.getFlash("bacplayer_a1").PushBarrageData(barrageMsg);
                        }
                        break;
                    case 1005:
                     //送礼
                        if (this.socket) {
                            this.socket.emit("msg", {
                                cmd:6021,
                                msg:'获取聊天数量'
                            });
                            this.socket.emit("msg", {
                                cmd:6011,
                                msg:'获取房间消息审核状态'
                            });
                        }
                        break;
                    case 6011:
                        if(sysMsg.data.msg_audit == 1){
                            this.oldForm.checkedType = true;
                            this.form.checkedType = true;
                        }else if(sysMsg.data.msg_audit == 0){
                            this.oldForm.checkedType = false;
                            this.form.checkedType = false;
                        }
                        break;
                    case 2024:
                        if(sysMsg.data.silence_all == 0){//正常
                            this.oldForm.chatType = true;
                            this.form.chatType = true;
                        }else if (sysMsg.data.silence_all == 1){//开启禁言
                            this.oldForm.chatType = false;
                            this.form.chatType = false;
                        }
                        break;
                    case 6010:
                        if(sysMsg.data.msg_audit == 0){//关闭
                            this.oldForm.checkedType = false;
                            this.form.checkedType = false;
                        }else if(sysMsg.data.msg_audit == 1){//开启
                            this.oldForm.checkedType = true;
                            this.form.checkedType = true;
                        }
                        break;
                    case 6020:
                        if(sysMsg.data.allsms){
                            this.chat.MsgData = sysMsg.data.allsms;
                        }else {
                            this.chat.MsgDat = [];
                        }
                        if (this.socket) {
                            this.socket.emit("msg", {
                                cmd:6021,
                                msg:'获取聊天数量'
                            });
                        }
                        break;
                    case 6021:
                        // 获取消息数量
                        this.chatNum = sysMsg.data;
                        break;
                    case 2020:
                        // 历史聊天记录
                        this.chat.Msg.data.allsms = this.chat.Msg.data.allsms.reverse();
                        for (var i = 0; i < this.chat.Msg.data.allsms.length; i++) {
                            this.chat.MsgData.unshift(this.chat.Msg.data.allsms[i]);
                        }
                        break;
                    case 2010:
                        // 禁言列表
                        this.bannedList = [];
                        if (this.chat.Msg.data[0]) {
                            this.bannedList = this.chat.Msg.data;
                            this.isBannedData = true;
                        } else {
                            this.isBannedData = false;
                        }
                        break;
                    }
                })
            })
        },
        // 邀请
        invite() {
            this.inviteFlag = true;
        },
        // 点赞
        praise() {
            var params = {
                masterID:this.detail.user_id,
                likeID:getLStorage('userid'),
                liveID:this.$route.params.liveId
            }
            this.$ajax.praise(params).then(res =>{
                if(res.resultCode == '01') {
                    this.getPraise()
                }
            })
        },
        // 获取点赞的次数
        getPraise() {
            this.$ajax.praiseNumber({liveID:this.$route.params.liveId}).then(res =>{
                this.likeCount = res.params.likeCount
            })
        },
        // 查询礼物
        checkAllGift() {
            var params = {
                userID:1,
                pageNo:1,
                pageSize:10
            }
            this.$ajax.getGift(params).then(res => {
                console.log(res)
                this.carousel = res.params.list
                if(res.params.page.total !== 0) {
                     this.giftFlag = true;
                }else {
                    this.$toast('你还没有可选的礼物哟！')
                }
            })
        },
        // 送礼
        gift() {
            this.checkAllGift();
        },
        // 关闭邀请、送礼
        closeInvite() {
            this.inviteFlag = false;
            this.giftFlag = false;
        },
        // 获取敏感词
        getSensitiveWord() {
            this.$ajax.SensitiveWord({
                cmd:'get',
                userid:getLStorage('userid')
            }).then(res =>{
                if(res.out_words !== '') {
                    consoole.log(333)
                    this.sensitiveWord = res.out_words.split('*').slice(1);
                }else {
                    this.sensitiveWord = []
                }
            })
        }
    },
    mounted() {
        this.createLiveRoom();
        this.getPraise();
        this.getSensitiveWord()
    }
}
</script>
<style lang="scss" scoped>
.chat {
    position: absolute;
    top: 31.4rem;
    bottom:6rem;
    width: 100%;
    background: #F6F6F6;
    overflow: auto;
    ul {
        li {
            display: flex;
            padding-left: 1.5rem;
            padding-top: 1.5rem;
            img {
                width: 3rem;
                height: 3rem;
                border-radius: 50%;
            }
            .audience {
                display: flex;
                flex-direction:column;
                padding-left: 0.9rem;
                width: 25rem;
                font-size: 1.4rem;
                .audience-name {
                    color: #666;
                    line-height: 2rem;
                }
                .audience-word {
                    color: #333;
                    line-height: 2rem;
                }
            }
        }
    }
    .chat-bottom {
        position: fixed;
        bottom: 0;
        left: 0;
        height: 6rem;
        width: 100%;
        background: #F6F6F6;
        display: flex;
        align-items: center;
        input {
            margin-left: 1rem;
            display: block;
            height: 3.4rem;
            background:url('../images/chatroom_ic_pen.png') no-repeat #fff 0.5rem;
            border-radius: 1.7rem 0 0 1.7rem;
            padding-left: 2.7rem;
            flex: 8;
        }
        span {
            flex: 2;
            height: 3.4rem;
            background: #fff;
            margin-right: 1rem;
            text-align: center;
            line-height: 3.4rem;
            font-size: 1.4rem;
            font-weight:100;
            border-radius: 0 1.7rem  1.7rem  0;
            color: #4285F4;
            position: relative;
        }
        span:before {
            content: "";
            width: 1px;
            height: 2rem;
            background: #CCCCCC;
            position: absolute;
            left: 0;
            top: 0.7rem;
        }
        img {
            position: absolute;
        }
        input::-webkit-input-placeholder{
            color:#999999;
        }
        input::-moz-placeholder{   /* Mozilla Firefox 19+ */
            color:#999999;
        }
        input:-moz-placeholder{    /* Mozilla Firefox 4 to 18 */
            color:#999999;
        }
        input:-ms-input-placeholder{  /* Internet Explorer 10-11 */ 
            color:#999999;
        }
    }
}
.chat-gift {
    position: fixed;
    right: 1rem;
    bottom: 5.5rem;
    display: flex;
    justify-content: center;
    flex-direction: column;
    align-items: center;
    .gift {
        width: 4.8rem;
        height: 4.8rem;
        &.invite {
            background: url('../images/icon_Invitation.png') no-repeat;
            background-size: 4.8rem 4.8rem;
        }
        &.praise {
            background: url('../images/icon_zan_1.png') no-repeat;
            background-size: 4.8rem 4.8rem;
            position: relative;
            display: flex;
            justify-content: center;
            span {
                color: #fff;
                font-size: 1.1rem;
                position: absolute;
                bottom: 0.5rem;
                width: 2.7rem;
                height: 1.5rem;
                text-align: center;
            }
        }
        &.box {
            width: 4rem;
            height: 4rem;
            border-radius: 50%;
            background: #FF467F;
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 0.55rem;
            img {
                width: 2rem;
                height: 2rem;
            }
        }
    }
}
.chat::-webkit-scrollbar{
    display: none;
}

// 邀请
.invite-enter-active,.gift-enter-active{
	/*从下到上*/
	animation:slideTop .4s;
}


.invite-leave-active,.gift-leave-active{

	/*从上到下*/
	animation:slideBottom .4s;
}


@keyframes slideTop{

	0%{
		transform: translate(0,100%);
	}

	100%{
		transform: translate(0,0);
	}
}

@keyframes slideBottom{

	0%{
		transform: translate(0,0);
	}

	100%{
		transform: translate(0,100%);
	}
}
.live-invite {
    height: 14.8rem;
    width: 100%;
    background: #fff;
    position: fixed;
    bottom: 0;
    left: 0;
    z-index: 15;
    .card {
        width: 100%;
        height: 10.5rem;
        border-bottom: 1px solid #E3E3E7;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        span {
            color: #909090;
            margin-top: 0.3rem;
        }
    }
    .cancel {
        width: 100%;
        height: 4.1rem;
        line-height: 4.1rem;
        text-align: center;
    }
}
.live-gift {
    width: 100%;
    height: 19rem;
    background: url('../images/Rectangle.png') no-repeat;
    background-size: cover;
    position: fixed;
    bottom: 0;
    left: 0;
    z-index: 15;
    .gift {
        height: 14.1rem;
        .swiper-slide {
            height: 14.1rem;
            display: flex;
            justify-content: center;
            .gift-details {
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
                font-size: 1.2rem;
                height: 12rem;
                img {
                    width: 8.4rem;
                    height: 8.4rem;
                }
                .money {
                    color: #FF6633;
                }
                .hand {
                    color: #CCCCCC;
                }
            }
        }
        .swiper-pagination {
            bottom: 0rem;
        }
    }
    .cancel {
        height: 4.9rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        background:rgba(0,0,0,0.1);
        .payway {
            padding-left: 1rem;
            color: #fff;
            span {
                color: #FF6633;
            }
        }
        button {
            width: 7.5rem;
            height: 3rem;
            background: #FF6633;
            border-radius: 1.5rem;
            color: #fff;
            margin-right: 1.5rem;
            border: none;
        }
    }
}
.mask {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0, .5);
    z-index: 1;
    &.fgift {
        background-color: rgba(0,0,0, 0);
    }
}
</style>

