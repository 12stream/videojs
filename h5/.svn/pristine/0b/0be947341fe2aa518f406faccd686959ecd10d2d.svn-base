<template>
    <div class="all-wrapper">
        <div class="all" v-for="(item,i) in videoDatas" :key="i" v-if="videoDatas.length !== 0">
            <video id="live-video" :src="item.video_url" :poster="item.cover_img" :muted="muteStatus" :autoplay="playStatus" controls>
            </video>
            <div class="video-introduct">
                <p class="title">{{item.video_name}}</p>
                <p class="time">开始时间：{{item.create_time}}</p>
            </div>
        </div>
        <div class="no-data" v-if="videoDatas.length == 0">
            <img src="@/components/images/img-ship.png">
            <span>暂无视频哦~</span>
        </div>
    </div>
</template>
<script>
import eventVue from '@/components/eventVue.js'
export default {
    data() {
        return {
            videoSrc:'',
            videoImg:'',
            playStatus:'',
            muteStatus:'',
            isMute:true,
            isPlay:false,
            videoDatas:[]
        }
    },
    props:['videoList', 'indexvalue'],
    methods:{
     
    },
    mounted() {
        eventVue.$on('TabsIndex', val =>{
            let paramsData = {
              vod_type:val,
              page:1
            }
            this.$ajax.getVideoList(paramsData).then(res => {
                console.log(res)
                this.videoDatas = res.data.data
                for(let val of res.data.data) {
                    val.playerOptions = {
                        playbackRates: [0.7, 1.0, 1.5, 2.0], //播放速度
                        autoplay: false, //如果true,浏览器准备好时开始回放。
                        controls: true, //控制条
                        preload: 'auto', //视频预加载
                        muted: false, //默认情况下将会消除任何音频。
                        loop: false, //导致视频一结束就重新开始。
                        language: 'zh-CN',
                        aspectRatio: '16:9', // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如"16:9"或"4:3"）
                        fluid: true, // 当true时，Video.js player将拥有流体大小。换句话说，它将按比例缩放以适应其容器。
                        sources: [{
                            type: 'application/x-mpegURL',
                            src: val.video_url
                        }],
                        poster: val.cover_img, //你的封面地址
                        width: document.documentElement.clientWidth,
                        notSupportedMessage: '此视频暂无法播放，请稍后再试' //允许覆盖Video.js无法播放媒体源时显示的默认信息。
                    }
                }
            })
        })
    }
}
</script>
<style lang="scss">
.no-data {
    display:flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    img {
        width: 13rem;
        height: 10.45rem;
        margin-top: 13.2rem;
    }
    span {
        color: #9B9B9B;
        font-size: 1.3rem;
        line-height: 1.85rem;
        margin-top: 2rem;
    }
}
</style>

